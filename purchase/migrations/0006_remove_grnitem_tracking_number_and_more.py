# Generated by Django 5.2.4 on 2025-07-28 03:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0002_alter_stockalert_options_alter_stockitem_options_and_more'),
        ('products', '0003_alter_producttracking_unique_together_and_more'),
        ('purchase', '0005_remove_bill_account_remove_purchaseorder_account_and_more'),
        ('user_auth', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='grnitem',
            name='tracking_number',
        ),
        migrations.RemoveField(
            model_name='purchasereturnitem',
            name='condition',
        ),
        migrations.RemoveField(
            model_name='purchasereturnitem',
            name='product',
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='driver_name',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='driver_phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='inspection_assigned_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='inspection_assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_inspections', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='inspection_completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='inspection_due_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='requires_inspection',
            field=models.BooleanField(default=True, help_text='Whether items require quality inspection'),
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='requires_quality_inspection',
            field=models.BooleanField(default=True, help_text='Alias for requires_inspection'),
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='warehouse',
            field=models.ForeignKey(blank=True, help_text='Receiving warehouse', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.warehouse'),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='grnitem',
            name='expiry_date',
            field=models.DateField(blank=True, help_text='Expiry date for perishable items', null=True),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='inspected_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='inspection_notes',
            field=models.TextField(blank=True, help_text='Quality inspection notes'),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='inspector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspected_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='location',
            field=models.CharField(blank=True, help_text='Storage location within warehouse', max_length=255),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='manufacturer_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product'),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='returned_qty',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Quantity returned to supplier', max_digits=10),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='tracking_required',
            field=models.BooleanField(default=False, help_text='Whether this item requires individual tracking'),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='tracking_type',
            field=models.CharField(choices=[('none', 'No Tracking'), ('batch', 'Batch/Lot Tracking'), ('serial', 'Serial Number'), ('imei', 'IMEI Number'), ('barcode', 'Barcode Tracking'), ('expiry', 'Expiry Date Tracking')], default='none', max_length=20),
        ),
        migrations.AddField(
            model_name='grnitem',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='condition_at_return',
            field=models.CharField(blank=True, help_text='Physical condition when returned', max_length=255),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='credit_note_requested',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='defects_description',
            field=models.TextField(blank=True, help_text='Detailed description of defects/issues'),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='packed_for_return',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='refund_requested',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='replacement_requested',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='resolution_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('replaced', 'Replaced'), ('refunded', 'Refunded'), ('credit_issued', 'Credit Note Issued'), ('disputed', 'Disputed'), ('resolved', 'Resolved')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='return_reason',
            field=models.CharField(choices=[('defective', 'Defective Items'), ('excess', 'Excess Quantity'), ('wrong_item', 'Wrong Item'), ('damaged', 'Damaged in Transit'), ('quality_issue', 'Quality Issue')], default='None', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='shipped_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='supplier_acknowledged',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='goodsreceiptnote',
            name='grn_number',
            field=models.CharField(blank=True, max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='goodsreceiptnote',
            name='inspected_by',
            field=models.ForeignKey(blank=True, help_text='User who performed the inspection', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspected_grns', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='goodsreceiptnote',
            name='inspection_report',
            field=models.FileField(blank=True, help_text='Quality inspection report', null=True, upload_to='purchase/grn/inspection/'),
        ),
        migrations.AlterField(
            model_name='goodsreceiptnote',
            name='purchase_order',
            field=models.ForeignKey(blank=True, help_text='Optional: Link to purchase order', null=True, on_delete=django.db.models.deletion.SET_NULL, to='purchase.purchaseorder'),
        ),
        migrations.AlterField(
            model_name='goodsreceiptnote',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('received', 'Received'), ('inspection_pending', 'Inspection Pending'), ('under_inspection', 'Under Inspection'), ('inspection_completed', 'Inspection Completed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=50),
        ),
        migrations.AlterField(
            model_name='grnitem',
            name='accepted_qty',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Quantity accepted after inspection', max_digits=10),
        ),
        migrations.AlterField(
            model_name='grnitem',
            name='ordered_qty',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Quantity from PO if linked', max_digits=10),
        ),
        migrations.AlterField(
            model_name='grnitem',
            name='po_item',
            field=models.ForeignKey(blank=True, help_text='Optional: Reference to PO item', null=True, on_delete=django.db.models.deletion.SET_NULL, to='purchase.purchaseorderitem'),
        ),
        migrations.AlterField(
            model_name='grnitem',
            name='quality_status',
            field=models.CharField(choices=[('pending', 'Pending Inspection'), ('under_inspection', 'Under Inspection'), ('passed', 'Quality Passed'), ('failed', 'Quality Failed'), ('partial', 'Partially Passed'), ('returned', 'Returned to Supplier')], default='pending', max_length=50),
        ),
        migrations.AlterField(
            model_name='grnitem',
            name='rejected_qty',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Quantity rejected after inspection', max_digits=10),
        ),
        migrations.AlterField(
            model_name='grnitem',
            name='unit_price',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Unit price from PO or manual entry', max_digits=12),
        ),
        migrations.AlterField(
            model_name='purchasereturnitem',
            name='grn_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='return_items', to='purchase.grnitem'),
        ),
        migrations.CreateModel(
            name='GRNItemTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(help_text='Barcode, Serial Number, IMEI, etc.', max_length=100)),
                ('tracking_type', models.CharField(choices=[('none', 'No Tracking'), ('batch', 'Batch/Lot Tracking'), ('serial', 'Serial Number'), ('imei', 'IMEI Number'), ('barcode', 'Barcode Tracking'), ('expiry', 'Expiry Date Tracking')], max_length=20)),
                ('batch_number', models.CharField(blank=True, help_text='Batch or lot number', max_length=100)),
                ('manufacturing_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('supplier_batch_reference', models.CharField(blank=True, max_length=100)),
                ('quality_status', models.CharField(choices=[('pending', 'Pending Inspection'), ('under_inspection', 'Under Inspection'), ('passed', 'Quality Passed'), ('failed', 'Quality Failed'), ('partial', 'Partially Passed'), ('returned', 'Returned to Supplier')], default='pending', max_length=50)),
                ('inspection_notes', models.TextField(blank=True)),
                ('inspected_at', models.DateTimeField(blank=True, null=True)),
                ('condition', models.CharField(blank=True, help_text='Physical condition of the item', max_length=100)),
                ('defects', models.TextField(blank=True, help_text='Any defects or issues found')),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('is_available', models.BooleanField(default=True, help_text='Whether item is available in inventory')),
                ('is_locked', models.BooleanField(default=True, help_text='Locked until purchase invoice is created')),
                ('current_location', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grn_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_items', to='purchase.grnitem')),
                ('inspected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product_tracking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grn_tracking', to='products.producttracking')),
            ],
            options={
                'unique_together': {('grn_item', 'tracking_number')},
            },
        ),
        migrations.CreateModel(
            name='GRNInventoryLock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('lock_reason', models.CharField(choices=[('pending_invoice', 'Pending Purchase Invoice'), ('quality_hold', 'Quality Hold'), ('damage_investigation', 'Damage Investigation'), ('customs_clearance', 'Customs Clearance'), ('manual_hold', 'Manual Hold')], default='pending_invoice', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('locked_at', models.DateTimeField(auto_now_add=True)),
                ('released_at', models.DateTimeField(blank=True, null=True)),
                ('lock_notes', models.TextField(blank=True)),
                ('release_notes', models.TextField(blank=True)),
                ('grn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_locks', to='purchase.goodsreceiptnote')),
                ('grn_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_locks', to='purchase.grnitem')),
                ('locked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('released_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='released_locks', to=settings.AUTH_USER_MODEL)),
                ('tracking_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='purchase.grnitemtracking')),
            ],
            options={
                'ordering': ['-locked_at'],
            },
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='tracking_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='return_items', to='purchase.grnitemtracking'),
        ),
        migrations.CreateModel(
            name='QualityInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_number', models.CharField(blank=True, max_length=100, unique=True)),
                ('inspection_type', models.CharField(choices=[('receiving', 'Receiving Inspection'), ('random', 'Random Quality Check'), ('customer_complaint', 'Customer Complaint Investigation'), ('supplier_audit', 'Supplier Audit')], default='receiving', max_length=50)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Assignment'), ('assigned', 'Assigned to Inspector'), ('in_progress', 'Inspection in Progress'), ('completed', 'Inspection Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='pending', max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('inspection_criteria', models.TextField(blank=True, help_text='Specific criteria to check')),
                ('sampling_method', models.CharField(blank=True, help_text='How samples were selected', max_length=100)),
                ('sample_size', models.IntegerField(default=0, help_text='Number of items inspected')),
                ('overall_result', models.CharField(choices=[('pending', 'Pending'), ('passed', 'Passed'), ('failed', 'Failed'), ('conditional', 'Conditional Pass')], default='pending', max_length=20)),
                ('pass_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Percentage of items that passed', max_digits=5)),
                ('inspection_report', models.FileField(blank=True, null=True, upload_to='purchase/quality/reports/')),
                ('photos', models.FileField(blank=True, null=True, upload_to='purchase/quality/photos/')),
                ('test_certificates', models.FileField(blank=True, null=True, upload_to='purchase/quality/certificates/')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True, help_text='Recommendations for future')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_quality_inspections_by', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_quality_inspections', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_inspections', to='user_auth.company')),
                ('grn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_inspections', to='purchase.goodsreceiptnote')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QualityInspectionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspected_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('passed_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('failed_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('result', models.CharField(choices=[('passed', 'Passed'), ('failed', 'Failed'), ('conditional', 'Conditional Pass'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('defects_found', models.JSONField(blank=True, default=list, help_text='List of defects found')),
                ('severity_level', models.CharField(blank=True, choices=[('minor', 'Minor'), ('major', 'Major'), ('critical', 'Critical')], max_length=20)),
                ('action_taken', models.CharField(blank=True, choices=[('accept', 'Accept'), ('reject', 'Reject'), ('return', 'Return to Supplier'), ('rework', 'Rework Required'), ('quarantine', 'Quarantine')], max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('photos', models.FileField(blank=True, null=True, upload_to='purchase/quality/item_photos/')),
                ('inspected_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grn_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspection_results', to='purchase.grnitem')),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='purchase.qualityinspection')),
                ('tracking_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='purchase.grnitemtracking')),
            ],
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='quality_result',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='return_items', to='purchase.qualityinspectionresult'),
        ),
    ]
