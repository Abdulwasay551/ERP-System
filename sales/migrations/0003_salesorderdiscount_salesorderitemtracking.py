# Generated by Django 5.2.4 on 2025-08-03 00:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sales', '0002_alter_invoice_options_alter_payment_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SalesOrderDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount'), ('bulk_discount', 'Bulk Discount'), ('customer_discount', 'Customer Discount'), ('promotion', 'Promotional Discount')], default='percentage', max_length=20)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Discount percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, help_text='Fixed discount amount', max_digits=12)),
                ('minimum_quantity', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum quantity for discount', max_digits=10, null=True)),
                ('minimum_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum order amount for discount', max_digits=12, null=True)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('approval_reason', models.TextField(blank=True)),
                ('customer_tier', models.CharField(blank=True, help_text='Customer tier/category for discount', max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_discounts', to=settings.AUTH_USER_MODEL)),
                ('sales_order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='discount_details', to='sales.salesorder')),
            ],
            options={
                'verbose_name': 'Sales Order Discount',
                'verbose_name_plural': 'Sales Order Discounts',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderItemTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=1.0, help_text='Quantity for this tracking entry', max_digits=10)),
                ('serial_number', models.CharField(blank=True, help_text='Serial number for individual tracking', max_length=255)),
                ('imei_number', models.CharField(blank=True, help_text='IMEI number for mobile devices', max_length=20)),
                ('batch_number', models.CharField(blank=True, help_text='Batch or lot number', max_length=100)),
                ('production_date', models.DateField(blank=True, help_text='Production/manufacture date', null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='Expiry date for perishable items', null=True)),
                ('barcode', models.CharField(blank=True, help_text='Product barcode/QR code', max_length=255)),
                ('status', models.CharField(choices=[('reserved', 'Reserved'), ('picked', 'Picked'), ('packed', 'Packed'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('returned', 'Returned')], default='reserved', max_length=20)),
                ('warehouse_location', models.CharField(blank=True, help_text='Specific warehouse location/bin', max_length=100)),
                ('delivered_date', models.DateTimeField(blank=True, null=True)),
                ('quality_status', models.CharField(choices=[('good', 'Good'), ('damaged', 'Damaged'), ('defective', 'Defective'), ('expired', 'Expired'), ('returned', 'Returned')], default='good', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional tracking notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delivery_note', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracked_items', to='sales.deliverynote')),
                ('sales_order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_items', to='sales.salesorderitem')),
            ],
            options={
                'verbose_name': 'Sales Order Item Tracking',
                'verbose_name_plural': 'Sales Order Item Tracking',
                'indexes': [models.Index(fields=['serial_number'], name='sales_sales_serial__7945f9_idx'), models.Index(fields=['imei_number'], name='sales_sales_imei_nu_9801ae_idx'), models.Index(fields=['batch_number'], name='sales_sales_batch_n_0b6ce4_idx'), models.Index(fields=['barcode'], name='sales_sales_barcode_0d562c_idx')],
            },
        ),
    ]
