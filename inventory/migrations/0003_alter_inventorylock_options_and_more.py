# Generated by Django 5.2.4 on 2025-08-02 09:39

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('crm', '0002_partner_agreement_contract_partner_annual_revenue_and_more'),
        ('inventory', '0002_alter_stockalert_options_alter_stockitem_options_and_more'),
        ('products', '0003_alter_producttracking_unique_together_and_more'),
        ('project_mgmt', '0001_initial'),
        ('purchase', '0011_alter_supplier_options_remove_supplier_address_and_more'),
        ('user_auth', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='inventorylock',
            options={'ordering': ['priority', '-locked_at']},
        ),
        migrations.AlterModelOptions(
            name='stockreservation',
            options={'ordering': ['priority', '-reserved_at']},
        ),
        migrations.RemoveField(
            model_name='stockitem',
            name='location',
        ),
        migrations.AddField(
            model_name='inventorylock',
            name='auto_unlock_on_bill',
            field=models.BooleanField(default=False, help_text='Auto unlock when bill is created'),
        ),
        migrations.AddField(
            model_name='inventorylock',
            name='auto_unlock_on_quality_pass',
            field=models.BooleanField(default=False, help_text='Auto unlock on quality approval'),
        ),
        migrations.AddField(
            model_name='inventorylock',
            name='priority',
            field=models.IntegerField(default=5, help_text='1=Highest, 10=Lowest'),
        ),
        migrations.AddField(
            model_name='inventorylock',
            name='requires_approval_to_unlock',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='inventorylock',
            name='unlock_approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='inventorylock',
            name='unlock_approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_unlocks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inventorylock',
            name='unlock_reason',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='auto_resolvable',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='auto_resolved',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='detailed_message',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='lot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alerts', to='inventory.stocklot'),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='resolution_notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='sms_sent',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='variance_amount',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alerts', to='inventory.warehouse'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='barcode',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='consumable_item',
            field=models.BooleanField(blank=True, default=False, help_text='Consumable/office supplies', null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='dimensions_height',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='dimensions_length',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='dimensions_width',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='discontinue_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='expiry_alert_days',
            field=models.PositiveIntegerField(blank=True, help_text='Days before expiry to alert', null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='has_expiry',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='hazardous_material',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='is_discontinued',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='landed_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='last_issued_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='last_received_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='lead_time_days',
            field=models.PositiveIntegerField(blank=True, help_text='Lead time for procurement', null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='preferred_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preferred_items', to='purchase.supplier'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='purchase_status',
            field=models.CharField(blank=True, choices=[('not_received', 'Not Received'), ('received_unbilled', 'Received but Unbilled'), ('received_billed', 'Received and Billed'), ('ready_for_use', 'Ready for Usage')], default='not_received', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='qr_code',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='quality_approved',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='quality_approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='quality_approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_approved_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='reorder_quantity',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='requires_approval_for_issue',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='requires_quality_check',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='restricted_access',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='rfid_tag',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='safety_stock',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='shelf_life_days',
            field=models.PositiveIntegerField(blank=True, help_text='Shelf life in days', null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='specific_location',
            field=models.CharField(blank=True, help_text='Specific location within warehouse/bin', max_length=255),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='standard_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='stock_status',
            field=models.CharField(choices=[('available', 'Available'), ('locked', 'Locked (Pending Invoice)'), ('quarantine', 'In Quarantine'), ('quality_check', 'Quality Check Required'), ('reserved', 'Reserved'), ('blocked', 'Blocked'), ('expired', 'Expired')], default='available', max_length=50),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='suitable_for_manufacturing',
            field=models.BooleanField(blank=True, default=True, help_text='Can be used in manufacturing', null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='suitable_for_sale',
            field=models.BooleanField(blank=True, default=True, help_text='Product can be sold', null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='temperature_sensitive',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='volume_per_unit',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='weight_per_unit',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='batch_number',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='best_before_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='certification_details',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='country_of_origin',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='is_quarantined',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='landed_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='quality_approved',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='quality_approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_lots', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='quality_approved_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='quality_certificate',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='quarantine_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplied_lots', to='purchase.supplier'),
        ),
        migrations.AddField(
            model_name='stocklot',
            name='supplier_lot_number',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='approved',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_movements', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='bill_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='purchase.billitem'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='duty_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='freight_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='grn_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='purchase.grnitem'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='is_reversed',
            field=models.BooleanField(default=False, help_text='Whether this movement has been reversed'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='lot_number',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='manufacturing_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='other_charges',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='po_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='purchase.purchaseorderitem'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='posted_to_accounts',
            field=models.BooleanField(default=False, help_text='Whether posted to accounting'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='posting_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='posting_required',
            field=models.BooleanField(default=True, help_text='Whether this movement requires accounting posting'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='requires_approval',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='reversal_reason',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='reversed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='reversed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reversed_movements', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='serial_number',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='tax_cost',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_reservations', to='crm.partner'),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='fulfilled_quantity',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='is_fulfilled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='priority',
            field=models.IntegerField(default=5, help_text='1=Highest, 10=Lowest'),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_reservations', to='project_mgmt.project'),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='remaining_quantity',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='default_for_finished_goods',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='default_for_raw_material',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='default_for_wip',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='latitude',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='location_type',
            field=models.CharField(blank=True, choices=[('physical', 'Physical'), ('virtual', 'Virtual')], default='physical', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='longitude',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='max_capacity_volume',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Maximum volume capacity', max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='max_capacity_weight',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Maximum weight capacity', max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='max_temperature',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='min_temperature',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='parent_warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_warehouses', to='inventory.warehouse'),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='requires_approval',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='restricted_access',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='temperature_controlled',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AlterField(
            model_name='inventorylock',
            name='lock_type',
            field=models.CharField(choices=[('grn_pending_invoice', 'GRN Pending Invoice'), ('grn_pending_bill', 'GRN Pending Bill'), ('quality_inspection', 'Quality Inspection'), ('quality_failed', 'Quality Failed'), ('sales_order', 'Sales Order'), ('production_order', 'Production Order'), ('return_processing', 'Return Processing'), ('audit_hold', 'Audit Hold'), ('legal_hold', 'Legal Hold'), ('customs_clearance', 'Customs Clearance'), ('manual', 'Manual Lock'), ('system_auto', 'System Auto Lock')], max_length=50),
        ),
        migrations.AlterField(
            model_name='inventorylock',
            name='reference_type',
            field=models.CharField(blank=True, choices=[('grn', 'Goods Receipt Note'), ('bill', 'Purchase Bill'), ('quality_check', 'Quality Check'), ('sales_order', 'Sales Order'), ('production_order', 'Production Order'), ('return', 'Return Document'), ('audit', 'Audit Document'), ('legal', 'Legal Document'), ('customs', 'Customs Document')], max_length=50),
        ),
        migrations.AlterField(
            model_name='stockalert',
            name='alert_type',
            field=models.CharField(choices=[('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('overstock', 'Overstock'), ('negative_stock', 'Negative Stock'), ('expired', 'Expired Items'), ('expiring_soon', 'Expiring Soon'), ('quality_failed', 'Quality Failed'), ('locked_too_long', 'Locked Too Long'), ('slow_moving', 'Slow Moving'), ('dead_stock', 'Dead Stock'), ('reorder_required', 'Reorder Required'), ('quality_pending', 'Quality Check Pending'), ('quarantine_extended', 'Extended Quarantine'), ('cost_variance', 'Cost Variance'), ('unauthorized_movement', 'Unauthorized Movement')], default='low_stock', max_length=50),
        ),
        migrations.AlterField(
            model_name='stockitem',
            name='tracking_type',
            field=models.CharField(choices=[('none', 'No Tracking'), ('batch', 'Batch Tracking'), ('serial', 'Serial Number'), ('expiry', 'Expiry Date Tracking'), ('lot', 'Lot Tracking')], default='none', max_length=20),
        ),
        migrations.AlterField(
            model_name='stockitem',
            name='valuation_method',
            field=models.CharField(choices=[('fifo', 'First In First Out'), ('lifo', 'Last In First Out'), ('weighted_avg', 'Weighted Average'), ('moving_avg', 'Moving Average'), ('standard', 'Standard Cost'), ('landed_cost', 'Landed Cost')], default='weighted_avg', max_length=20),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='movement_type',
            field=models.CharField(choices=[('grn_receipt', 'GRN Receipt'), ('grn_return', 'GRN Return'), ('purchase_return', 'Purchase Return'), ('quality_pass', 'Quality Passed'), ('quality_fail', 'Quality Failed'), ('quarantine_in', 'Quarantine In'), ('quarantine_out', 'Quarantine Out'), ('sale', 'Sale'), ('sales_return', 'Sales Return'), ('customer_return', 'Customer Return'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out'), ('inter_warehouse_transfer', 'Inter-Warehouse Transfer'), ('production_in', 'Production In'), ('production_out', 'Production Out'), ('material_issue', 'Material Issue'), ('material_return', 'Material Return'), ('adjustment_in', 'Adjustment In'), ('adjustment_out', 'Adjustment Out'), ('physical_verification', 'Physical Verification'), ('stock_correction', 'Stock Correction'), ('lock', 'Lock Inventory'), ('unlock', 'Unlock Inventory'), ('reserve', 'Reserve Stock'), ('unreserve', 'Unreserve Stock'), ('opening_stock', 'Opening Stock'), ('closing_stock', 'Closing Stock'), ('scrap', 'Scrap/Write-off'), ('expiry', 'Expiry Write-off'), ('damage', 'Damage Write-off')], default='grn_receipt', max_length=50),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='quality_status',
            field=models.CharField(blank=True, choices=[('pending', 'Pending Inspection'), ('passed', 'Quality Passed'), ('failed', 'Quality Failed'), ('quarantined', 'Quarantined'), ('approved', 'Approved for Use'), ('rejected', 'Rejected')], max_length=50),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='reference_type',
            field=models.CharField(blank=True, choices=[('grn', 'Goods Receipt Note'), ('purchase_return', 'Purchase Return'), ('quality_inspection', 'Quality Inspection'), ('sales_order', 'Sales Order'), ('delivery_note', 'Delivery Note'), ('transfer_order', 'Transfer Order'), ('production_order', 'Production Order'), ('work_order', 'Work Order'), ('stock_adjustment', 'Stock Adjustment'), ('physical_count', 'Physical Count'), ('bill', 'Purchase Bill'), ('invoice', 'Sales Invoice')], max_length=50),
        ),
        migrations.AlterField(
            model_name='stockreservation',
            name='reservation_type',
            field=models.CharField(choices=[('sales_order', 'Sales Order'), ('production_order', 'Production Order'), ('transfer_order', 'Transfer Order'), ('work_order', 'Work Order'), ('quality_hold', 'Quality Hold'), ('project', 'Project'), ('maintenance', 'Maintenance'), ('manual', 'Manual Reservation'), ('customer_specific', 'Customer Specific')], max_length=50),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='code',
            field=models.CharField(blank=True, help_text='Warehouse code (e.g., KHI-RAW-01)', max_length=50),
        ),
        migrations.AlterField(
            model_name='warehouse',
            name='warehouse_type',
            field=models.CharField(choices=[('raw_material', 'Raw Material'), ('work_in_progress', 'Work-in-Progress (WIP)'), ('finished_goods', 'Finished Goods'), ('scrap', 'Scrap'), ('transit', 'Transit'), ('quarantine', 'Quarantine'), ('returns', 'Returns'), ('virtual', 'Virtual'), ('main', 'Main Warehouse'), ('distribution', 'Distribution Center'), ('receiving', 'Receiving Dock'), ('quality', 'Quality Control')], default='main', max_length=50),
        ),
        migrations.CreateModel(
            name='StockAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_number', models.CharField(max_length=100, unique=True)),
                ('adjustment_date', models.DateField(default=django.utils.timezone.now)),
                ('adjustment_type', models.CharField(choices=[('physical_count', 'Physical Count'), ('cycle_count', 'Cycle Count'), ('annual_audit', 'Annual Audit'), ('damage_write_off', 'Damage Write-off'), ('expiry_write_off', 'Expiry Write-off'), ('theft_loss', 'Theft/Loss'), ('system_correction', 'System Correction'), ('opening_balance', 'Opening Balance'), ('revaluation', 'Revaluation'), ('other', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('posted', 'Posted'), ('cancelled', 'Cancelled')], default='draft', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('reference_document', models.CharField(blank=True, max_length=100)),
                ('total_adjustment_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('posting_required', models.BooleanField(default=True)),
                ('posted_to_accounts', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_adjustments', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_adjustments', to='user_auth.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_adjustments', to=settings.AUTH_USER_MODEL)),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posted_adjustments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockAdjustmentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_quantity', models.DecimalField(decimal_places=2, default=0, help_text='System quantity', max_digits=12)),
                ('physical_quantity', models.DecimalField(decimal_places=2, default=0, help_text='Actual counted quantity', max_digits=12)),
                ('adjustment_quantity', models.DecimalField(decimal_places=2, default=0, help_text='Difference', max_digits=12)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('adjustment_value', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('lot_number', models.CharField(blank=True, max_length=100)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('count_date', models.DateTimeField(blank=True, null=True)),
                ('adjustment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.stockadjustment')),
                ('counted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='counted_items', to=settings.AUTH_USER_MODEL)),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustment_items', to='inventory.stockitem')),
            ],
            options={
                'ordering': ['stock_item__product__name'],
            },
        ),
        migrations.CreateModel(
            name='StockSerial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('in_stock', 'In Stock'), ('sold', 'Sold'), ('reserved', 'Reserved'), ('quarantined', 'Quarantined'), ('damaged', 'Damaged'), ('returned', 'Returned')], default='in_stock', max_length=30)),
                ('received_date', models.DateTimeField(auto_now_add=True)),
                ('sold_date', models.DateTimeField(blank=True, null=True)),
                ('warranty_start_date', models.DateField(blank=True, null=True)),
                ('warranty_end_date', models.DateField(blank=True, null=True)),
                ('warranty_terms', models.TextField(blank=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchased_serials', to='crm.partner')),
                ('lot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='serials', to='inventory.stocklot')),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='serials', to='inventory.stockitem')),
            ],
            options={
                'ordering': ['received_date'],
            },
        ),
        migrations.CreateModel(
            name='StockTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_number', models.CharField(max_length=100, unique=True)),
                ('transfer_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('in_transit', 'In Transit'), ('received', 'Received'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('received_at', models.DateTimeField(blank=True, null=True)),
                ('expected_arrival', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('priority', models.IntegerField(default=5, help_text='1=Highest, 10=Lowest')),
                ('carrier', models.CharField(blank=True, max_length=100)),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('shipping_cost', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_transfers', to='user_auth.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_transfers', to=settings.AUTH_USER_MODEL)),
                ('from_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transfers', to='inventory.warehouse')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_transfers', to=settings.AUTH_USER_MODEL)),
                ('sent_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_transfers', to=settings.AUTH_USER_MODEL)),
                ('to_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transfers', to='inventory.warehouse')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockTransferItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('sent_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('received_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('lot_number', models.CharField(blank=True, max_length=100)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.stocktransfer')),
            ],
            options={
                'ordering': ['product__name'],
            },
        ),
        migrations.CreateModel(
            name='WarehouseBin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=30)),
                ('aisle', models.CharField(blank=True, max_length=20, null=True)),
                ('shelf', models.CharField(blank=True, max_length=20, null=True)),
                ('level', models.CharField(blank=True, max_length=20, null=True)),
                ('max_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_items', models.PositiveIntegerField(blank=True, null=True)),
                ('fifo_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('fefo_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('single_product_only', models.BooleanField(blank=True, default=False, null=True)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('qr_code', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('allowed_categories', models.ManyToManyField(blank=True, help_text='Only these categories allowed', to='products.productcategory')),
                ('restricted_products', models.ManyToManyField(blank=True, help_text='Products restricted from this bin', to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bins', to='inventory.warehouse')),
            ],
            options={
                'ordering': ['warehouse__name', 'zone__name', 'name'],
            },
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='from_bin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outgoing_movements', to='inventory.warehousebin'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='to_bin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incoming_movements', to='inventory.warehousebin'),
        ),
        migrations.AlterField(
            model_name='stockitem',
            name='bin_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_items', to='inventory.warehousebin'),
        ),
        migrations.CreateModel(
            name='WarehouseZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True)),
                ('zone_type', models.CharField(blank=True, choices=[('storage', 'Storage'), ('picking', 'Picking'), ('packing', 'Packing'), ('receiving', 'Receiving'), ('shipping', 'Shipping'), ('quality', 'Quality Control'), ('cold_storage', 'Cold Storage'), ('hazmat', 'Hazardous Materials')], max_length=50, null=True)),
                ('temperature_controlled', models.BooleanField(blank=True, default=False, null=True)),
                ('min_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('max_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zones', to='inventory.warehouse')),
            ],
            options={
                'ordering': ['warehouse__name', 'name'],
                'unique_together': {('warehouse', 'code')},
            },
        ),
        migrations.AddField(
            model_name='warehousebin',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bins', to='inventory.warehousezone'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_items', to='inventory.warehousezone'),
        ),
        migrations.AlterUniqueTogether(
            name='warehousebin',
            unique_together={('warehouse', 'code')},
        ),
    ]
