# Generated by Django 5.2.4 on 2025-07-28 03:40

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0002_initial'),
        ('inventory', '0001_initial'),
        ('products', '0002_product_default_variant_product_is_variant_and_more'),
        ('purchase', '0005_remove_bill_account_remove_purchaseorder_account_and_more'),
        ('user_auth', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='stockalert',
            options={'ordering': ['-triggered_at']},
        ),
        migrations.AlterModelOptions(
            name='stockitem',
            options={'ordering': ['product__name', 'warehouse__name']},
        ),
        migrations.AlterModelOptions(
            name='stockmovement',
            options={'ordering': ['-timestamp']},
        ),
        migrations.AlterModelOptions(
            name='warehouse',
            options={'ordering': ['name']},
        ),
        migrations.RenameField(
            model_name='stockmovement',
            old_name='reference',
            new_name='batch_number',
        ),
        migrations.AddField(
            model_name='stockalert',
            name='current_quantity',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='email_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='message',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='notification_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='severity',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20),
        ),
        migrations.AddField(
            model_name='stockalert',
            name='threshold_quantity',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='available_quantity',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Available for sale/use', max_digits=12),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='average_cost',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='bin_location',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='is_tracked',
            field=models.BooleanField(default=False, help_text='Whether items are individually tracked'),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='last_movement_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='last_purchase_cost',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='last_stock_take_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='location',
            field=models.CharField(blank=True, help_text='Specific location within warehouse', max_length=255),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='locked_quantity',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Locked pending invoice', max_digits=12),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='quarantine_quantity',
            field=models.DecimalField(decimal_places=2, default=0, help_text='In quarantine', max_digits=12),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='reorder_point',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='reserved_quantity',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Reserved for orders', max_digits=12),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='total_cost_value',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=15),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='tracking_type',
            field=models.CharField(choices=[('none', 'No Tracking'), ('batch', 'Batch Tracking'), ('serial', 'Serial Number'), ('expiry', 'Expiry Date Tracking')], default='none', max_length=20),
        ),
        migrations.AddField(
            model_name='stockitem',
            name='valuation_method',
            field=models.CharField(choices=[('fifo', 'First In First Out'), ('lifo', 'Last In First Out'), ('weighted_avg', 'Weighted Average'), ('standard', 'Standard Cost')], default='weighted_avg', max_length=20),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='expiry_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='inventory_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements_inventory', to='accounting.account'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='quality_status',
            field=models.CharField(blank=True, choices=[('pending', 'Pending Inspection'), ('passed', 'Quality Passed'), ('failed', 'Quality Failed'), ('quarantined', 'Quarantined')], max_length=50),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='reference_id',
            field=models.PositiveIntegerField(blank=True, help_text='ID of the reference document', null=True),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='reference_number',
            field=models.CharField(blank=True, help_text='Document number for reference', max_length=100),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='reference_type',
            field=models.CharField(blank=True, choices=[('grn', 'Goods Receipt Note'), ('purchase_return', 'Purchase Return'), ('quality_inspection', 'Quality Inspection'), ('sales_order', 'Sales Order'), ('transfer', 'Stock Transfer'), ('adjustment', 'Stock Adjustment'), ('production', 'Production Order')], max_length=50),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='total_cost',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=15),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='tracking_number',
            field=models.CharField(blank=True, help_text='Item tracking number if applicable', max_length=100),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='unit_cost',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='address',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='code',
            field=models.CharField(blank=True, help_text='Warehouse code', max_length=50),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_warehouses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='warehouse_type',
            field=models.CharField(choices=[('main', 'Main Warehouse'), ('distribution', 'Distribution Center'), ('receiving', 'Receiving Dock'), ('quality', 'Quality Control'), ('quarantine', 'Quarantine Area'), ('returns', 'Returns Processing')], default='main', max_length=50),
        ),
        migrations.AlterField(
            model_name='stockalert',
            name='alert_type',
            field=models.CharField(choices=[('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('overstock', 'Overstock'), ('expired', 'Expired Items'), ('expiring_soon', 'Expiring Soon'), ('quality_failed', 'Quality Failed'), ('locked_too_long', 'Locked Too Long')], default='low_stock', max_length=50),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='movement_type',
            field=models.CharField(choices=[('grn_receipt', 'GRN Receipt'), ('quality_pass', 'Quality Passed'), ('quality_fail', 'Quality Failed'), ('purchase_return', 'Purchase Return'), ('sale', 'Sale'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out'), ('adjustment_in', 'Adjustment In'), ('adjustment_out', 'Adjustment Out'), ('production_in', 'Production In'), ('production_out', 'Production Out'), ('quarantine_in', 'Quarantine In'), ('quarantine_out', 'Quarantine Out'), ('lock', 'Lock Inventory'), ('unlock', 'Unlock Inventory')], default='grn_receipt', max_length=50),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='quantity',
            field=models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterUniqueTogether(
            name='stockitem',
            unique_together={('product', 'warehouse')},
        ),
        migrations.AlterUniqueTogether(
            name='warehouse',
            unique_together={('company', 'code')},
        ),
        migrations.CreateModel(
            name='InventoryLock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked_quantity', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('lock_type', models.CharField(choices=[('grn_pending_invoice', 'GRN Pending Invoice'), ('quality_inspection', 'Quality Inspection'), ('sales_order', 'Sales Order'), ('quality_failed', 'Quality Failed'), ('return_processing', 'Return Processing'), ('manual', 'Manual Lock')], max_length=50)),
                ('reference_type', models.CharField(blank=True, max_length=50)),
                ('reference_id', models.PositiveIntegerField(blank=True, null=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('locked_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('unlocked_at', models.DateTimeField(blank=True, null=True)),
                ('locked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_locks', to=settings.AUTH_USER_MODEL)),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_locks', to='inventory.stockitem')),
                ('unlocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unlocked_inventory_locks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-locked_at'],
            },
        ),
        migrations.CreateModel(
            name='StockReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('reservation_type', models.CharField(choices=[('sales_order', 'Sales Order'), ('production_order', 'Production Order'), ('transfer_order', 'Transfer Order'), ('quality_hold', 'Quality Hold'), ('manual', 'Manual Reservation')], max_length=50)),
                ('reference_id', models.PositiveIntegerField(blank=True, null=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('reserved_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('reserved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_reservations', to=settings.AUTH_USER_MODEL)),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='inventory.stockitem')),
            ],
            options={
                'ordering': ['-reserved_at'],
            },
        ),
        migrations.CreateModel(
            name='StockLot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_number', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('remaining_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('received_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('manufacturing_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('grn_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_lots', to='purchase.grnitem')),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lots', to='inventory.stockitem')),
            ],
            options={
                'ordering': ['received_date'],
                'unique_together': {('stock_item', 'lot_number')},
            },
        ),
    ]
