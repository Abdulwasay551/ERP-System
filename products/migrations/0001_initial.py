# Generated by Django 5.2.4 on 2025-07-26 19:29

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_auth', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_categories', to='user_auth.company')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='products.productcategory')),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=100, unique=True)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True)),
                ('product_type', models.CharField(choices=[('product', 'Product'), ('service', 'Service'), ('raw_material', 'Raw Material'), ('component', 'Component'), ('consumable', 'Consumable')], default='product', max_length=50)),
                ('unit_of_measure', models.CharField(choices=[('piece', 'Piece'), ('kg', 'Kilogram'), ('liter', 'Liter'), ('meter', 'Meter'), ('hour', 'Hour'), ('box', 'Box'), ('set', 'Set'), ('dozen', 'Dozen')], default='piece', max_length=50)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, help_text='Weight in kg', max_digits=10, null=True)),
                ('dimensions', models.CharField(blank=True, help_text='L x W x H', max_length=100)),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_active', models.BooleanField(default=True)),
                ('is_saleable', models.BooleanField(default=True, help_text='Can be sold to customers')),
                ('is_purchasable', models.BooleanField(default=True, help_text='Can be purchased from suppliers')),
                ('is_manufacturable', models.BooleanField(default=False, help_text='Can be manufactured')),
                ('is_stockable', models.BooleanField(default=True, help_text='Tracked in inventory')),
                ('minimum_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maximum_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reorder_level', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='user_auth.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_products', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.productcategory')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('company', 'sku')},
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(blank=True, max_length=50)),
                ('size', models.CharField(blank=True, max_length=50)),
                ('material', models.CharField(blank=True, max_length=100)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('minimum_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='products.product')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
