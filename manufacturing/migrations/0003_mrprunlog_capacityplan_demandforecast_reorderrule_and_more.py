# Generated by Django 5.2.4 on 2025-08-05 06:16

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('crm', '0003_enhanced_crm_models'),
        ('inventory', '0004_stocklot_quarantine_reason'),
        ('manufacturing', '0002_alter_billofmaterials_options_and_more'),
        ('products', '0004_product_auto_reorder_product_bill_of_materials_and_more'),
        ('user_auth', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MRPRunLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('trigger_source', models.CharField(choices=[('manual', 'Manual'), ('scheduled', 'Scheduled'), ('auto', 'Automatic'), ('api', 'API')], default='manual', max_length=20)),
                ('execution_time_seconds', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('products_processed', models.IntegerField(default=0)),
                ('requirements_generated', models.IntegerField(default=0)),
                ('purchase_requests_created', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('partial', 'Partial Success'), ('cancelled', 'Cancelled')], default='success', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('warnings', models.TextField(blank=True)),
                ('configuration_snapshot', models.JSONField(blank=True, default=dict)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mrp_run_logs', to='user_auth.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('mrp_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='run_logs', to='manufacturing.mrpplan')),
            ],
            options={
                'ordering': ['-run_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CapacityPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_date', models.DateField()),
                ('planning_horizon_days', models.IntegerField(default=30)),
                ('available_hours', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('planned_hours', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('actual_hours', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('utilization_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('efficiency_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_overloaded', models.BooleanField(default=False)),
                ('capacity_issues', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capacity_plans', to='user_auth.company')),
                ('work_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capacity_plans', to='manufacturing.workcenter')),
            ],
            options={
                'ordering': ['plan_date', 'work_center__name'],
                'unique_together': {('company', 'work_center', 'plan_date')},
            },
        ),
        migrations.CreateModel(
            name='DemandForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forecast_date', models.DateField()),
                ('forecast_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('forecast_type', models.CharField(choices=[('manual', 'Manual'), ('historical', 'Historical Based'), ('seasonal', 'Seasonal'), ('trend', 'Trend Based'), ('ai_generated', 'AI Generated')], default='manual', max_length=20)),
                ('confidence_level', models.DecimalField(decimal_places=2, default=50, help_text='Confidence level percentage (0-100)', max_digits=5)),
                ('planning_horizon_days', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('manual_adjustment', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('final_forecast', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demand_forecasts', to='user_auth.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_forecasts', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demand_forecasts', to='products.product')),
            ],
            options={
                'ordering': ['forecast_date', 'product__name'],
                'unique_together': {('company', 'product', 'forecast_date')},
            },
        ),
        migrations.CreateModel(
            name='ReorderRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reorder_method', models.CharField(choices=[('min_max', 'Min-Max'), ('reorder_point', 'Reorder Point'), ('lot_for_lot', 'Lot for Lot'), ('fixed_quantity', 'Fixed Quantity'), ('period_of_supply', 'Period of Supply')], default='reorder_point', max_length=20)),
                ('minimum_stock', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('maximum_stock', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('reorder_point', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('safety_stock', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('economic_order_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('lead_time_days', models.IntegerField(default=0)),
                ('average_daily_demand', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('demand_variability', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('auto_create_purchase_request', models.BooleanField(default=False)),
                ('auto_create_work_order', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reorder_rules', to='user_auth.company')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reorder_rules', to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reorder_rules', to='inventory.warehouse')),
            ],
            options={
                'ordering': ['product__name', 'warehouse__name'],
                'unique_together': {('company', 'product', 'warehouse')},
            },
        ),
        migrations.CreateModel(
            name='SupplierLeadTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lead_time_days', models.IntegerField(default=0, help_text='Average lead time in days')),
                ('min_lead_time_days', models.IntegerField(default=0, help_text='Minimum lead time')),
                ('max_lead_time_days', models.IntegerField(default=0, help_text='Maximum lead time')),
                ('on_time_delivery_rate', models.DecimalField(decimal_places=2, default=100, help_text='On-time delivery percentage (0-100)', max_digits=5)),
                ('quality_rating', models.DecimalField(decimal_places=2, default=5, help_text='Quality rating (1-10)', max_digits=3)),
                ('price_per_unit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('minimum_order_quantity', models.DecimalField(decimal_places=2, default=1, max_digits=12)),
                ('is_preferred', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_to', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actual_deliveries', models.IntegerField(default=0)),
                ('late_deliveries', models.IntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_lead_times', to='user_auth.company')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_lead_times', to='products.product')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_times', to='crm.partner')),
            ],
            options={
                'ordering': ['supplier__name', 'product__name'],
                'unique_together': {('company', 'supplier', 'product')},
            },
        ),
    ]
