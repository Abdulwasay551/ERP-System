# Generated by Django 5.2.4 on 2025-08-05 03:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hr', '0002_rename_salary_employee_current_salary_and_more'),
        ('project_mgmt', '0001_initial'),
        ('user_auth', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='task',
            options={'ordering': ['due_date', '-created_at']},
        ),
        migrations.AlterModelOptions(
            name='timeentry',
            options={'ordering': ['-date', '-created_at']},
        ),
        migrations.AddField(
            model_name='timeentry',
            name='approval_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=50),
        ),
        migrations.AddField(
            model_name='timeentry',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_time_entries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='timeentry',
            name='hourly_rate',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Rate for this time entry', max_digits=10),
        ),
        migrations.AddField(
            model_name='timeentry',
            name='is_billable',
            field=models.BooleanField(default=True, help_text='Whether this time is billable to client'),
        ),
        migrations.AddField(
            model_name='timeentry',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('target_date', models.DateField()),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('percentage_complete', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='project_mgmt.project')),
            ],
            options={
                'ordering': ['target_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectBilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_period_start', models.DateField()),
                ('billing_period_end', models.DateField()),
                ('total_hours', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('billable_hours', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('expenses_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('invoice_number', models.CharField(blank=True, max_length=100)),
                ('invoice_date', models.DateField(blank=True, null=True)),
                ('payment_status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billings', to='project_mgmt.project')),
            ],
            options={
                'ordering': ['-billing_period_start'],
            },
        ),
        migrations.CreateModel(
            name='ProjectDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='project_documents/')),
                ('external_link', models.URLField(blank=True, help_text='Link to external document')),
                ('document_type', models.CharField(choices=[('requirement', 'Requirement'), ('design', 'Design Document'), ('contract', 'Contract'), ('meeting_notes', 'Meeting Notes'), ('report', 'Report'), ('other', 'Other')], default='other', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='project_mgmt.project')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('expense_type', models.CharField(choices=[('material', 'Material'), ('equipment', 'Equipment'), ('travel', 'Travel'), ('contractor', 'Contractor'), ('software', 'Software/License'), ('other', 'Other')], default='other', max_length=100)),
                ('expense_date', models.DateField()),
                ('is_billable', models.BooleanField(default=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='project_receipts/')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='project_mgmt.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('note_type', models.CharField(choices=[('meeting', 'Meeting Notes'), ('decision', 'Decision Log'), ('issue', 'Issue Log'), ('general', 'General Note')], default='general', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='project_mgmt.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('risk_type', models.CharField(choices=[('technical', 'Technical'), ('resource', 'Resource'), ('schedule', 'Schedule'), ('budget', 'Budget'), ('external', 'External'), ('quality', 'Quality'), ('other', 'Other')], default='other', max_length=100)),
                ('probability', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=50)),
                ('impact', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=50)),
                ('status', models.CharField(choices=[('identified', 'Identified'), ('analyzed', 'Analyzed'), ('mitigated', 'Mitigated'), ('closed', 'Closed')], default='identified', max_length=50)),
                ('mitigation_plan', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_risks', to='hr.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risks', to='project_mgmt.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_hourly_rate', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('timesheet_approval_required', models.BooleanField(default=True)),
                ('auto_create_invoices', models.BooleanField(default=False)),
                ('project_code_prefix', models.CharField(default='PROJ', max_length=10)),
                ('task_stages', models.JSONField(default=list, help_text='Custom task stages for projects')),
                ('notification_settings', models.JSONField(default=dict, help_text='Notification preferences')),
                ('billing_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('milestone', 'On Milestone'), ('project_end', 'Project End')], default='monthly', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='project_settings', to='user_auth.company')),
            ],
            options={
                'verbose_name': 'Project Settings',
                'verbose_name_plural': 'Project Settings',
            },
        ),
        migrations.CreateModel(
            name='ProjectTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('default_budget', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('estimated_duration_days', models.IntegerField(default=30)),
                ('template_tasks', models.JSONField(default=list, help_text='Template tasks structure')),
                ('template_milestones', models.JSONField(default=list, help_text='Template milestones structure')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_templates', to='user_auth.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subtask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('review', 'Under Review'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=50)),
                ('priority', models.CharField(default='Medium', max_length=50)),
                ('estimated_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('actual_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subtasks', to='hr.employee')),
                ('parent_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='project_mgmt.task')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('project_manager', 'Project Manager'), ('team_lead', 'Team Lead'), ('developer', 'Developer'), ('designer', 'Designer'), ('analyst', 'Business Analyst'), ('tester', 'Quality Assurance'), ('consultant', 'Consultant'), ('other', 'Other')], default='other', max_length=255)),
                ('permissions', models.JSONField(default=dict, help_text='Role-based permissions')),
                ('joined_date', models.DateField(auto_now_add=True)),
                ('left_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_teams', to='hr.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='project_mgmt.project')),
            ],
            options={
                'unique_together': {('project', 'employee')},
            },
        ),
        migrations.CreateModel(
            name='ResourceAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=255)),
                ('allocation_percentage', models.DecimalField(decimal_places=2, default=100.0, help_text='Percentage of time allocated', max_digits=5)),
                ('hourly_rate', models.DecimalField(decimal_places=2, default=0, help_text='Billing rate per hour', max_digits=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_billable', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_allocations', to='hr.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_allocations', to='project_mgmt.project')),
            ],
            options={
                'unique_together': {('project', 'employee')},
            },
        ),
        migrations.CreateModel(
            name='TaskDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependency_type', models.CharField(choices=[('finish_to_start', 'Finish to Start'), ('start_to_start', 'Start to Start'), ('finish_to_finish', 'Finish to Finish'), ('start_to_finish', 'Start to Finish')], default='finish_to_start', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('depends_on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependents', to='project_mgmt.task')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='project_mgmt.task')),
            ],
            options={
                'unique_together': {('task', 'depends_on')},
            },
        ),
    ]
